@using ScoutsHonour.Extensions;
@model ScoutsHonour.Models.Member
@{
    ViewBag.Title = "Edit";
}

<h2>Edit Member</h2>

<div class="pure-g">
    <div class="pure-u-1">

        @using (Html.BeginFormWithClassName("pure-form pure-form-aligned"))
        {
            @Html.AntiForgeryToken()

            <fieldset>
                @Html.ValidationSummary(true)
                @Html.HiddenFor(model => model.Id)

                <div class="pure-control-group">
                    @Html.LabelFor(model => model.FirstName)
                    @Html.EditorFor(model => model.FirstName)
                    @Html.ValidationMessageFor(model => model.FirstName)
                </div>

                <div class="pure-control-group">
                    @Html.LabelFor(model => model.LastName)
                    @Html.EditorFor(model => model.LastName)
                    @Html.ValidationMessageFor(model => model.LastName)
                </div>

                <div class="pure-control-group">
                    @Html.LabelFor(model => model.Phone)
                    @Html.EditorFor(model => model.Phone)
                    @Html.ValidationMessageFor(model => model.Phone)
                </div>

                <div class="pure-control-group">
                    @Html.LabelFor(model => model.Phone2)
                    @Html.EditorFor(model => model.Phone2)
                    @Html.ValidationMessageFor(model => model.Phone2)
                </div>

                <div class="pure-control-group">
                    @Html.LabelFor(model => model.Email)
                    @Html.EditorFor(model => model.Email)
                    @Html.ValidationMessageFor(model => model.Email)
                </div>

                <div class="pure-control-group">
                    @Html.LabelFor(model => model.Type)
                    @Html.EnumDropDownListFor(model => model.Type, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Type)
                </div>

                <div class="pure-control-group">
                    @Html.LabelFor(model => model.SixColour)
                    @Html.EditorFor(model => model.SixColour)
                    @Html.ValidationMessageFor(model => model.SixColour)
                </div>

                <div class="pure-control-group">
                    @Html.LabelFor(model => model.Rank)
                    @Html.EditorFor(model => model.Rank)
                    @Html.ValidationMessageFor(model => model.Rank)
                </div>

                <div class="pure-control-group">
                    @Html.LabelFor(model => model.DOB)
                    @Html.EditorFor(model => model.DOB)
                    @Html.ValidationMessageFor(model => model.DOB)
                </div>

                <div class="pure-control-group">
                    @Html.LabelFor(model => model.DateJoined)
                    @Html.EditorFor(model => model.DateJoined)
                    @Html.ValidationMessageFor(model => model.DateJoined)
                </div>

                <div class="pure-control-group">
                    @Html.LabelFor(model => model.Status)
                    @Html.EnumDropDownListFor(model => model.Status)
                    @Html.ValidationMessageFor(model => model.Status)
                </div>

                <div class="pure-control-group">
                    @Html.LabelFor(model => model.PublicNotes)
                    @Html.EditorFor(model => model.PublicNotes)
                    @Html.ValidationMessageFor(model => model.PublicNotes)
                </div>

                <div class="pure-control-group">
                    @Html.LabelFor(model => model.PrivateNotes)
                    @Html.EditorFor(model => model.PrivateNotes)
                    @Html.ValidationMessageFor(model => model.PrivateNotes)
                </div>

                @*// Only give the choice to move between groups if there is more than 1 option *@
                @if (((List<SelectListItem>)ViewBag.UsersGroups).Count > 1)
                {
                    <div class="pure-control-group">
                        @Html.LabelFor(model => model.Group)
                        @Html.DropDownListFor(model => model.GroupId, (List<SelectListItem>)ViewBag.UsersGroups)
                        @Html.ValidationMessageFor(model => model.GroupId)
                    </div>
                } else {
                    @Html.HiddenFor(model => model.GroupId)
                }

                <div class="pure-control-group">
                    <button type="submit" class="pure-button-primary pure-button">Save</button>
                    <a href="@Url.Action("Index")" class="pure-button">Cancel</a>
                </div>

            </fieldset>
        }

    </div>
</div>